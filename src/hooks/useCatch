import { useCallback } from "react";


interface Item{
    id : number;
    y : number;
}

interface useCatchProps{
    items : Item[];
    itemSize : number; // アイテムのサイズ
    CatchZoneY : number; // キャッチゾーンのY座標
    

}



export function useCatch({ items, itemSize, CatchZoneY }: useCatchProps) {

    return useCallback(() => {
       if (items.length === 0) return;
       const distances = items.map(item => {
          const itemBottom = item.y + itemSize; // itemSizeはアイテムのサイズを表す定数
          return {
            id: item.id,
            distance: Math.abs(itemBottom - CatchZoneY),
          };
        })
        const nearest = distances.reduce((best, cur) =>
          cur.distance < best.distance ? cur : best
        , distances[0]);

        if(nearest.distance <= 10) {
          return nearest.id; // Perfect
        }

    }, []); // ここに実装を追加する必要があります
}

